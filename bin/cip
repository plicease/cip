#!/bin/bash

set -e 

if [ "x$CIP_TAG" == "x" ]; then
  export CIP_TAG=default
fi

if [ "x$1" == "x" ]; then
  if [ "x$CIP_COMMAND" == "x" ]; then
    echo usage
    exit 2
  else
    command=$CIP_COMMAND
    export -n CIP_COMMAND
  fi
else
  command=$1
  shift
fi

export CIP_COMP=$(basename $(pwd))
export CIP_CONT=cip-$CIP_COMP-$CIP_TAG

function cip_local_lib {
  container_path=$(docker exec $CIP_CONT printenv PATH)
  # PERL_MB_OPT "--install_base /home/cip/perl5"
  export CIP_LOCAL_LIB="-e PATH=/home/cip/perl5/bin:$container_path -e PERL5LIB=/home/cip/perl5/lib/perl5 -e PERL_MM_OPT=INSTALL_BASE=/home/cip/perl5"
}

function dist_dir_name {
  export CIP_DIST_DIR=$(grep ^name dist.ini | head -1 | cut -d= -f2 | sed 's/^[ ]*//' | sed 's/[ ]*$//')-$(grep ^version dist.ini | head -1 | cut -d= -f2 | sed 's/^[ ]*//' | sed 's/[ ]*$//')
}


mkdir -p ~/.cip/install-cache/$CIP_TAG

case "command1" in

  before_install|start)
    docker run \
      --name $CIP_CONT \
      -v `pwd`:/work \
      -v ~/.cip:/home/cip/.cip \
      -v ~/.cip/install-cache/"$CIP_TAG":/home/cip/perl5 \
      -d \
      plicease/ciperl:$CIP_TAG \
      sleep infinity
    if [ -f maint/cip-before-install ]; then
      ./maint/cip-before-install
    fi
    ;;

  install)
    cip_local_lib
    if [ -f maint/cip-install ]; then
      ./maint/cip-install
    elif [ -f dist.ini ]; then
      echo ":::: DZIL DEPS   ::::"
      cip sudo bash -c 'dzil-dzil authordeps --missing | dzil-cpanm -n'
      echo ":::: DZIL BUILD  ::::"
      cip exec dzil-dzil build
      echo ":::: MODULE DEPS ::::"
      dist_dir_name
      cip exec bash -c "cd $CIP_DIST_DIR; cpanm -n --installdeps ."
    elif [ -f Makefile.PL ] || [ -f Build.PL ] || [ -f cpanfile ]; then
      cip exec cpanm -n --installdeps .
    else
      echo "unknown installer"
      exit 2;
    fi
    ;;

  script)
    cip_local_lib
    if [ -f maint/cip-test ]; then
      ./maint/cip-test
    elif [ -f dist.ini ]; then
      dist_dir_name
      if [ -f "$CIP_DIST_DIR/Makefile.PL" ]; then
        echo "+ perl Makefile.PL"
        cip exec bash -c "cd $CIP_DIST_DIR; perl Makefile.PL"
        echo "+ make"
        cip exec bash -c "cd $CIP_DIST_DIR; make"
        echo "+ make test TEST_VERBOSE=1"
        cip exec bash -c "cd $CIP_DIST_DIR; make test TEST_VERBOSE=1"
      elif [ -f "$CIP_DIST_DIR/Build.PL" ]; then
        echo "+ perl Build.PL"
        cip exec bash -c "cd $CIP_DIST_DIR; perl Build.PL"
        echo "+ ./Build"
        cip exec bash -c "cd $CIP_DIST_DIR; ./Build"
        echo "+ ./Build test verbose=1"
        cip exec bash -c "cd $CIP_DIST_DIR; ./Build test verbose=1"
      else
        echo "unknown installer (dzil)"
        exit 2;
      fi
    elif [ -f Makefile.PL ]; then
      echo "+ perl Makefile.PL"
      cip exec perl Makefile.PL
      echo "+ make"
      cip exec make
      echo "+ make test TEST_VERBOSE=1"
      cip exec make tes TEST_VERBOSE=1t
    elif [ -f Build.PL ]; then
      echo "+ perl Build.PL"
      cip exec perl Build.PL
      echo "+ ./Build"
      cip exec ./Build
      echo "+ ./Build test verbose=1"
      cip exec ./Build test verbose=1
    elif [ -d t ]; then
      echo "+ prove -lvm"
      cip exec prove -lvm
    else
      echo "unknown instaler"
      exit 2;
    fi
    ;;
    

  sudo)
    docker exec $CIP_CONT "$@"
    ;;

  exec)
    cip_local_lib
    docker exec $CIP_LOCAL_LIB -e PERL_MB_OPT="--install_base /home/cip/perl5" -u 1000 $CIP_CONT "$@"
    ;;

  bash|tcsh|perl)
    cip_local_lib
    docker exec $CIP_LOCAL_LIB -e PERL_MB_OPT="--install_base /home/cip/perl5" -it -u 1000 $CIP_CONT $command "$@"
    ;;

  stop)
    docker stop /$CIP_CONT
    docker container rm /$CIP_CONT
    ;;

  *)
    echo unknown command: $command
    exit 2
    ;;

esac
